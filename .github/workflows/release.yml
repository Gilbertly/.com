name: release
on:
  push:
    branches: [master, develop]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node: ['14']
    name: Build node ${{ matrix.node }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: Restore & cache dependencies
        uses: actions/cache@v3.0.1
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm install

      - name: Build project assets
        run: npm run build:prod

      - name: Upload build assets
        uses: actions/upload-artifact@v2
        with:
          name: build_assets
          path: |
            ./
            !.cache/**
            !node_modules/**
          retention-days: 1

  deployDev:
    needs: build
    runs-on: ubuntu-latest
    environment: deployDev
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Download build assets
        uses: actions/download-artifact@v2
        with:
          name: build_assets
          path: ./

      - name: Configure aws dev credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync built assets to S3
        run: aws s3 sync build s3://${{ secrets.AWS_DEST_BUCKET }} --cache-control "max-age=86400" --delete

      - name: Invalidate cloudfront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DIST_ID }} --paths '/*'

  deployProd:
    needs: build
    runs-on: ubuntu-latest
    environment: deployProd
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download build assets
        uses: actions/download-artifact@v2
        with:
          name: build_assets
          path: ./

      - name: Configure aws prod credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync built assets to S3
        run: aws s3 sync build s3://${{ secrets.AWS_DEST_BUCKET }} --cache-control "max-age=86400" --delete

      - name: Invalidate cloudfront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DIST_ID }} --paths '/*'

      - name: Semantic release
        run: |
          npm i -D @semantic-release/{changelog,git,github,commit-analyzer,release-notes-generator}
          npm run zip:assets && GITHUB_TOKEN=${{ secrets.RELEASE_GH_TOKEN }} npx semantic-release
