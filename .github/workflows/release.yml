name: release
on: 
  push:
    branches: [master, develop]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install
      
      - name: Build project assets
        run: npm run build:prod
      
      - name: Upload build assets
        uses: actions/upload-artifact@v2
        with:
          name: build_assets
          path: |
            ./
            !.cache/**
            !node_modules/**
          retention-days: 1

  deployDev:
    needs: build
    runs-on: ubuntu-latest
    environment: deployDev
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Download build assets
        uses: actions/download-artifact@v2
        with:
          name: build_assets
          path: ./

      - name: Configure aws dev credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync built assets to S3
        run: aws s3 sync public s3://${{ secrets.AWS_DEST_BUCKET }} --cache-control "max-age=86400" --delete

      - name: Invalidate cloudfront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DIST_ID }} --paths '/*'

  deployProd:
    needs: build
    runs-on: ubuntu-latest
    environment: deployProd
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Download build assets
        uses: actions/download-artifact@v2
        with:
          name: build_assets
          path: ./

      - name: Configure aws prod credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync built assets to S3 
        run: aws s3 sync public s3://${{ secrets.AWS_DEST_BUCKET }} --cache-control "max-age=86400" --delete

      - name: Invalidate cloudfront cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DIST_ID }} --paths '/*'

      - name: Semantic release
        run: |
          export GH_TOKEN=${{ github.token }}
          npm run zip:assets
          npx semantic-release
