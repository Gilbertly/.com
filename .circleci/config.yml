version: 2.1
orbs:
  aws-s3: circleci/aws-s3@2.0.0

refs:
  container_config: &container_config
    docker:
      - image: circleci/node:12
    working_directory: ~/app
  steps:
    - &install_dependencies
      run:
        name: Install Dependencies
        command: |
          sudo apt-get -y -qq install awscli
          npm install
    - &save_cache
      save_cache:
        paths:
          - node_modules
        key: v1-dependencies-{{ checksum "package.json" }}
    - &restore_cache
      restore_cache:
        keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
    - &persist_workspace
      persist_to_workspace:
        root: ./
        paths:
          - ./
    - &attach_workspace
      attach_workspace:
        at: ~/app
    - &test_build
      run:
        name: Build Assets
        command: npm run test:build
    - &sync_build_assets
      aws-s3/sync:
        arguments: |
          --cache-control "max-age=86400" \
          --delete
        aws-access-key-id: AWS_ACCESS_KEY_ID
        aws-secret-access-key: AWS_SECRET_ACCESS_KEY
        aws-region: AWS_REGION
        from: public
        to: s3://${AWS_DEST_BUCKET}
    - &invalidate_cdn_cache
      run:
        name: Invalidate CloudFront Cache
        command: aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DIST_ID} --paths '/*'
    - &semantic_release
      run:
        name: Semantic Release
        command: |
          export GH_TOKEN=${GH_TOKEN}
          npm run zip:assets
          npx semantic-release

jobs:
  build:
    <<: *container_config
    steps:
      - checkout
      - *install_dependencies
      - *save_cache
      - *restore_cache
      - *test_build
      - *persist_workspace

  deploy_dev:
    <<: *container_config
    steps:
      - *attach_workspace
      - *sync_build_assets
      - *invalidate_cdn_cache
      - *semantic_release

  deploy_prod:
    <<: *container_config
    steps:
      - *attach_workspace
      - *sync_build_assets
      - *invalidate_cdn_cache
      - *semantic_release

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy_dev:
          filters:
            branches:
              only:
                - develop
          requires:
            - build
          context: dev-gilbertly-com
      - deploy_prod:
          filters:
            branches:
              only:
                - master
          requires:
            - build
          context: prod-gilbertly-com
